{
    "remote.SSH.remotePlatform": {
        "pascal.fis.agh.edu.pl": "linux",
        "taurus.fis.agh.edu.pl": "linux"
    },
    "workbench.colorTheme": "GitHub Dark Dimmed",
    "editor.minimap.enabled": false,
    "C_Cpp.default.cppStandard": "c++23",
    "C_Cpp.default.cStandard": "gnu23",
    "indentRainbow.errorColor": "rgba(64,32,32,0.6)",
    "C_Cpp.default.compilerPath": "C:\\mingw64\\bin\\gcc.exe",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": false,
        "scminput": false
    },
    "github.copilot.advanced": {},
    "github.copilot.editor.enableAutoCompletions": true,
    "rust-analyzer.rustfmt.overrideCommand": null,
    "rust-analyzer.check.overrideCommand": null,
    "editor.formatOnSave": false,
    "editor.lineNumbers": "relative",
    "vim.easymotion": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "f",
                "j"
            ],
            "after": [
                "Esc"
            ]
        },
        {
            "before": [
                "j",
                "f"
            ],
            "after": [
                "Esc"
            ]
        },
        {
            "before": [
                "<up>"
            ],
            "after": [
                "Esc"
            ]
        },
        {
            "before": [
                "<down>"
            ],
            "after": [
                "Esc"
            ]
        },
        {
            "before": [
                "<left>"
            ],
            "after": [
                "Esc"
            ]
        },
        {
            "before": [
                "<right>"
            ],
            "after": [
                "Esc"
            ]
        },
    ],
    "vim.visualModeKeyBindings": [
        {
            "before": [
                "<space>",
                "w"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "w"
            ]
        },
        {
            "before": [
                "<space>",
                "e"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "e"
            ]
        },
        {
            "before": [
                "<space>",
                "s"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "s"
            ]
        },
        {
            "before": [
                "<space>",
                "f"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "f"
            ]
        },
        {
            "before": [
                "<space>",
                "S-f"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "S-f"
            ]
        },
        {
            "before": [
                "<space>",
                "j"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "j"
            ]
        },
        {
            "before": [
                "<space>",
                "k"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "k"
            ]
        },
        {
            "before": [
                "<space>",
                "b"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "b"
            ]
        },
        {
            "before": [
                "<C-j>"
            ],
            "after": [
                "5",
                "j"
            ]
        },
        {
            "before": [
                "<C-k>"
            ],
            "after": [
                "5",
                "k"
            ]
        },
        // Stay in visual mode while indenting
        {
            "before": [
                "S-h"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        {
            "before": [
                "S-l"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        // Move selected lines while staying in visual mode
        {
            "before": [
                "S-j"
            ],
            "commands": [
                "editor.action.moveLinesDownAction"
            ]
        },
        {
            "before": [
                "S-k"
            ],
            "commands": [
                "editor.action.moveLinesUpAction"
            ]
        },
        // Toggle comment selection
        {
            "before": [
                "<space>",
                "c"
            ],
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            "before": [
                "<leader>",
                "r"
            ],
            "after": [
                ":",
                "%",
                "s",
                "/"
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "u"
            ],
            "after": [],
            "commands": [
                {
                    "command": "undo",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<C-r>"
            ],
            "after": [],
            "commands": [
                {
                    "command": "redo",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<space>",
                "w"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "w"
            ]
        },
        {
            "before": [
                "<space>",
                "e"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "e"
            ]
        },
        {
            "before": [
                "<space>",
                "s"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "s"
            ]
        },
        {
            "before": [
                "<space>",
                "f"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "f"
            ]
        },
        {
            "before": [
                "<space>",
                "S-f"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "S-f"
            ]
        },
        {
            "before": [
                "<space>",
                "j"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "j"
            ]
        },
        {
            "before": [
                "<space>",
                "k"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "k"
            ]
        },
        {
            "before": [
                "<space>",
                "b"
            ],
            "after": [
                "<leader>",
                "<leader>",
                "b"
            ]
        },
        {
            "before": [
                "<C-j>"
            ],
            "after": [
                "5",
                "j"
            ]
        },
        {
            "before": [
                "<C-k>"
            ],
            "after": [
                "5",
                "k"
            ]
        },
        {
            "before": [
                "<C-n>"
            ],
            "commands": [
                ":nohl"
            ]
        },
        {
            "before": [
                "K"
            ],
            "commands": [
                "lineBreakInsert"
            ],
            "silent": true
        },
        // NAVIGATION
        // Switch b/w buffers
        {
            "before": [
                "<C-h>"
            ],
            "commands": [
                "workbench.action.focusNextGroup"
            ]
        },
        {
            "before": [
                "<C-l>"
            ],
            "commands": [
                ":bnext"
            ]
        },
        {
            "before": [
                "<C-a>"
            ],
            "after": [
                "g",
                "g",
                "V",
                "G",
            ]
        },
        {
            "before": [
                "<leader>",
                "r"
            ],
            "after": [
                ":",
                "%",
                "s",
                "/"
            ]
        },
    ],
    "vim.leader": ",",
    "vim.handleKeys": {
        "<C-f>": false
    },
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },
    "editor.cursorSurroundingLines": 15,
    "editor.cursorStyle": "line-thin",
    "editor.fontWeight": "bold",
    "workbench.tree.indent": 24,
    "git.autofetch": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.detectIndentation": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.currentLine.enabled": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.hovers.enabled": false,
    "git.ignoreRebaseWarning": true,
    "peacock.surpriseMeOnStartup": true,
    "peacock.affectActivityBar": false,
    "peacock.affectStatusBar": false,
    "peacock.affectSashHover": false,
    "workbench.layoutControl.enabled": false,
    "workbench.editor.enablePreview": false,
    "window.zoomLevel": -1,
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],
    "window.density.editorTabHeight": "compact",
    "workbench.editor.tabSizing": "fixed",
    "github.copilot.chat.experimental.inlineChatCompletionTrigger.enabled": true,
    "github.copilot.chat.experimental.temporalContext.enabled": true,
    "github.copilot.chat.experimental.generateTests.codeLens": true,
}